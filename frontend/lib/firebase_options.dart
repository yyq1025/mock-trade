// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyBMsBIICA802wJlR5yJdRebiyBRW-MTJ7g',
    appId: '1:141802804685:web:3191bbfedaa6c438636084',
    messagingSenderId: '141802804685',
    projectId: 'mock-trade',
    authDomain: 'mock-trade.firebaseapp.com',
    storageBucket: 'mock-trade.firebasestorage.app',
    measurementId: 'G-K7BDCT2XZD',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyBDK375xYV5YdT5U3hzrrojHMz9xHeqkuk',
    appId: '1:141802804685:android:5ca5f2eae07f9355636084',
    messagingSenderId: '141802804685',
    projectId: 'mock-trade',
    storageBucket: 'mock-trade.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyCro5lI3s4GW9aRJUjevXsUzjxHRX0yzeM',
    appId: '1:141802804685:ios:836032745bf7751c636084',
    messagingSenderId: '141802804685',
    projectId: 'mock-trade',
    storageBucket: 'mock-trade.firebasestorage.app',
    androidClientId: '141802804685-38fgitos2gih2t6uav9cibve8d8n3f5j.apps.googleusercontent.com',
    iosClientId: '141802804685-8l780fmi9h0233sema408mnm00c8uk99.apps.googleusercontent.com',
    iosBundleId: 'com.example.mockTrade',
  );

}